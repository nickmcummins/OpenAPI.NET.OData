{
  "openapi": "3.0.1",
  "info": {
    "title": "OData Service for namespace Microsoft.OData.Service.Sample.TrippinInMemory.Models",
    "description": "This OData service is located at http://services.odata.org/TrippinRESTierService",
    "version": "1.0.1"
  },
  "servers": [
    {
      "url": "http://services.odata.org/TrippinRESTierService"
    }
  ],
  "paths": {
    "/Airlines": {
      "get": {
        "tags": [
          "Airlines.Airline"
        ],
        "summary": "Get entities from Airlines",
        "operationId": "Airlines.Airline.ListAirline",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "AirlineCode",
                  "AirlineCode desc",
                  "Name",
                  "Name desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "AirlineCode",
                  "Name"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Airline",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airline"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "Airlines.Airline"
        ],
        "summary": "Add new entity to Airlines",
        "operationId": "Airlines.Airline.CreateAirline",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airline"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airline"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/Airlines/{AirlineCode}": {
      "get": {
        "tags": [
          "Airlines.Airline"
        ],
        "summary": "Get entity from Airlines by key",
        "operationId": "Airlines.Airline.GetAirline",
        "parameters": [
          {
            "name": "AirlineCode",
            "in": "path",
            "description": "key: AirlineCode of Airline",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Airline"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "AirlineCode",
                  "Name"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airline"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "Airlines.Airline"
        ],
        "summary": "Update entity in Airlines",
        "operationId": "Airlines.Airline.UpdateAirline",
        "parameters": [
          {
            "name": "AirlineCode",
            "in": "path",
            "description": "key: AirlineCode of Airline",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Airline"
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airline"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "Airlines.Airline"
        ],
        "summary": "Delete entity from Airlines",
        "operationId": "Airlines.Airline.DeleteAirline",
        "parameters": [
          {
            "name": "AirlineCode",
            "in": "path",
            "description": "key: AirlineCode of Airline",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Airline"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/Airlines/$count": {
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.Airlines",
        "responses": {
          "200": {
            "description": "The count of the resource",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ODataCountResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Airports": {
      "get": {
        "tags": [
          "Airports.Airport"
        ],
        "summary": "Get entities from Airports",
        "operationId": "Airports.Airport.ListAirport",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Name",
                  "Name desc",
                  "IcaoCode",
                  "IcaoCode desc",
                  "IataCode",
                  "IataCode desc",
                  "Location",
                  "Location desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Name",
                  "IcaoCode",
                  "IataCode",
                  "Location"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Airport",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airport"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "Airports.Airport"
        ],
        "summary": "Add new entity to Airports",
        "operationId": "Airports.Airport.CreateAirport",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airport"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airport"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/Airports/{IcaoCode}": {
      "get": {
        "tags": [
          "Airports.Airport"
        ],
        "summary": "Get entity from Airports by key",
        "operationId": "Airports.Airport.GetAirport",
        "parameters": [
          {
            "name": "IcaoCode",
            "in": "path",
            "description": "key: IcaoCode of Airport",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Airport"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Name",
                  "IcaoCode",
                  "IataCode",
                  "Location"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airport"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "Airports.Airport"
        ],
        "summary": "Update entity in Airports",
        "operationId": "Airports.Airport.UpdateAirport",
        "parameters": [
          {
            "name": "IcaoCode",
            "in": "path",
            "description": "key: IcaoCode of Airport",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Airport"
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airport"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "Airports.Airport"
        ],
        "summary": "Delete entity from Airports",
        "operationId": "Airports.Airport.DeleteAirport",
        "parameters": [
          {
            "name": "IcaoCode",
            "in": "path",
            "description": "key: IcaoCode of Airport",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Airport"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/Airports/$count": {
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.Airports",
        "responses": {
          "200": {
            "description": "The count of the resource",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ODataCountResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/GetNearestAirport(lat={lat},lon={lon})": {
      "get": {
        "tags": [
          "Airports"
        ],
        "summary": "Invoke functionImport GetNearestAirport",
        "operationId": "FunctionImport.GetNearestAirport",
        "parameters": [
          {
            "name": "lat",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "string"
                },
                {
                  "enum": [
                    "-INF",
                    "INF",
                    "NaN"
                  ]
                }
              ],
              "format": "double"
            }
          },
          {
            "name": "lon",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "string"
                },
                {
                  "enum": [
                    "-INF",
                    "INF",
                    "NaN"
                  ]
                }
              ],
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airport"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "functionImport"
      }
    },
    "/GetPersonWithMostFriends()": {
      "get": {
        "tags": [
          "People"
        ],
        "summary": "Invoke functionImport GetPersonWithMostFriends",
        "description": "The person with most friends.",
        "operationId": "FunctionImport.GetPersonWithMostFriends",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "functionImport"
      }
    },
    "/Me": {
      "get": {
        "tags": [
          "Me.Person"
        ],
        "summary": "Get Me",
        "operationId": "Me.Person.GetPerson",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "Me.Person"
        ],
        "summary": "Update Me",
        "operationId": "Me.Person.UpdatePerson",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/Me/BestFriend": {
      "get": {
        "tags": [
          "Me.Person"
        ],
        "summary": "Get BestFriend from Me",
        "description": "The best friend.",
        "operationId": "Me.GetBestFriend",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/Me/BestFriend/$ref": {
      "get": {
        "tags": [
          "Me.Person"
        ],
        "summary": "Get ref of BestFriend from Me",
        "description": "The best friend.",
        "operationId": "Me.GetRefBestFriend",
        "responses": {
          "200": {
            "description": "Retrieved navigation property link",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "put": {
        "tags": [
          "Me.Person"
        ],
        "summary": "Update the ref of navigation property BestFriend in Me",
        "description": "The best friend.",
        "operationId": "Me.UpdateRefBestFriend",
        "requestBody": {
          "description": "New navigation property ref values",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "Me.Person"
        ],
        "summary": "Delete ref of navigation property BestFriend for Me",
        "description": "The best friend.",
        "operationId": "Me.DeleteRefBestFriend",
        "parameters": [
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee": {
      "get": {
        "tags": [
          "Person.Employee"
        ],
        "summary": "Get the item of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person as Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result entities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()": {
      "get": {
        "tags": [
          "Me.Functions"
        ],
        "summary": "Invoke function GetFavoriteAirline",
        "operationId": "Me.BestFriend.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.GetFavoriteAirline",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airline"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()"
      ]
    },
    "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})": {
      "get": {
        "tags": [
          "Me.Functions"
        ],
        "summary": "Invoke function GetFriendsTrips",
        "operationId": "Me.BestFriend.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.GetFriendsTrips",
        "parameters": [
          {
            "name": "userName",
            "in": "path",
            "description": "Usage: userName={userName}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Employee",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})"
      ]
    },
    "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip": {
      "post": {
        "tags": [
          "Me.Actions"
        ],
        "summary": "Invoke action GetPeersForTrip",
        "operationId": "Me.BestFriend.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.GetPeersForTrip",
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "tripId": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Employee",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip"
      ]
    },
    "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip": {
      "post": {
        "tags": [
          "Me.Actions"
        ],
        "summary": "Invoke action ShareTrip",
        "description": "Details of the shared trip.",
        "operationId": "Me.BestFriend.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.ShareTrip",
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "tripId": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip"
      ]
    },
    "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})": {
      "get": {
        "tags": [
          "Me.Functions"
        ],
        "summary": "Invoke function UpdatePersonLastName",
        "operationId": "Me.BestFriend.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.UpdatePersonLastName",
        "parameters": [
          {
            "name": "lastName",
            "in": "path",
            "description": "Usage: lastName={lastName}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "boolean",
                      "default": false
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})"
      ]
    },
    "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager": {
      "get": {
        "tags": [
          "Person.Manager"
        ],
        "summary": "Get the item of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person as Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result entities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()": {
      "get": {
        "tags": [
          "Me.Functions"
        ],
        "summary": "Invoke function GetFavoriteAirline",
        "operationId": "Me.BestFriend.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.GetFavoriteAirline",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airline"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()"
      ]
    },
    "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})": {
      "get": {
        "tags": [
          "Me.Functions"
        ],
        "summary": "Invoke function GetFriendsTrips",
        "operationId": "Me.BestFriend.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.GetFriendsTrips",
        "parameters": [
          {
            "name": "userName",
            "in": "path",
            "description": "Usage: userName={userName}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Manager",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})"
      ]
    },
    "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip": {
      "post": {
        "tags": [
          "Me.Actions"
        ],
        "summary": "Invoke action GetPeersForTrip",
        "operationId": "Me.BestFriend.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.GetPeersForTrip",
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "tripId": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Manager",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip"
      ]
    },
    "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip": {
      "post": {
        "tags": [
          "Me.Actions"
        ],
        "summary": "Invoke action ShareTrip",
        "description": "Details of the shared trip.",
        "operationId": "Me.BestFriend.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.ShareTrip",
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "tripId": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip"
      ]
    },
    "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})": {
      "get": {
        "tags": [
          "Me.Functions"
        ],
        "summary": "Invoke function UpdatePersonLastName",
        "operationId": "Me.BestFriend.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.UpdatePersonLastName",
        "parameters": [
          {
            "name": "lastName",
            "in": "path",
            "description": "Usage: lastName={lastName}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "boolean",
                      "default": false
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})"
      ]
    },
    "/Me/Friends": {
      "get": {
        "tags": [
          "Me.Person"
        ],
        "summary": "Get Friends from Me",
        "operationId": "Me.ListFriends",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "UserName desc",
                  "FirstName",
                  "FirstName desc",
                  "LastName",
                  "LastName desc",
                  "MiddleName",
                  "MiddleName desc",
                  "Gender",
                  "Gender desc",
                  "Age",
                  "Age desc",
                  "Emails",
                  "Emails desc",
                  "AddressInfo",
                  "AddressInfo desc",
                  "HomeAddress",
                  "HomeAddress desc",
                  "FavoriteFeature",
                  "FavoriteFeature desc",
                  "Features",
                  "Features desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Person",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/Me/Friends/{UserName}/$ref": {
      "delete": {
        "tags": [
          "Me.Person"
        ],
        "summary": "Delete ref of navigation property Friends for Me",
        "operationId": "Me.DeleteRefFriends",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "@id",
            "in": "query",
            "description": "Delete Uri",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee": {
      "get": {
        "tags": [
          "Person.Employee"
        ],
        "summary": "Get the item of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person as Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result entities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()": {
      "get": {
        "tags": [
          "Me.Functions"
        ],
        "summary": "Invoke function GetFavoriteAirline",
        "operationId": "Me.Friends.Person.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.GetFavoriteAirline",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airline"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()"
      ]
    },
    "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})": {
      "get": {
        "tags": [
          "Me.Functions"
        ],
        "summary": "Invoke function GetFriendsTrips",
        "operationId": "Me.Friends.Person.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.GetFriendsTrips",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "Usage: userName={userName}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Employee",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})"
      ]
    },
    "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip": {
      "post": {
        "tags": [
          "Me.Actions"
        ],
        "summary": "Invoke action GetPeersForTrip",
        "operationId": "Me.Friends.Person.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.GetPeersForTrip",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "tripId": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Employee",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip"
      ]
    },
    "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip": {
      "post": {
        "tags": [
          "Me.Actions"
        ],
        "summary": "Invoke action ShareTrip",
        "description": "Details of the shared trip.",
        "operationId": "Me.Friends.Person.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.ShareTrip",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "tripId": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip"
      ]
    },
    "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})": {
      "get": {
        "tags": [
          "Me.Functions"
        ],
        "summary": "Invoke function UpdatePersonLastName",
        "operationId": "Me.Friends.Person.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.UpdatePersonLastName",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "lastName",
            "in": "path",
            "description": "Usage: lastName={lastName}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "boolean",
                      "default": false
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})"
      ]
    },
    "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager": {
      "get": {
        "tags": [
          "Person.Manager"
        ],
        "summary": "Get the item of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person as Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result entities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()": {
      "get": {
        "tags": [
          "Me.Functions"
        ],
        "summary": "Invoke function GetFavoriteAirline",
        "operationId": "Me.Friends.Person.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.GetFavoriteAirline",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airline"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()"
      ]
    },
    "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})": {
      "get": {
        "tags": [
          "Me.Functions"
        ],
        "summary": "Invoke function GetFriendsTrips",
        "operationId": "Me.Friends.Person.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.GetFriendsTrips",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "Usage: userName={userName}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Manager",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})"
      ]
    },
    "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip": {
      "post": {
        "tags": [
          "Me.Actions"
        ],
        "summary": "Invoke action GetPeersForTrip",
        "operationId": "Me.Friends.Person.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.GetPeersForTrip",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "tripId": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Manager",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip"
      ]
    },
    "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip": {
      "post": {
        "tags": [
          "Me.Actions"
        ],
        "summary": "Invoke action ShareTrip",
        "description": "Details of the shared trip.",
        "operationId": "Me.Friends.Person.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.ShareTrip",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "tripId": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip"
      ]
    },
    "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})": {
      "get": {
        "tags": [
          "Me.Functions"
        ],
        "summary": "Invoke function UpdatePersonLastName",
        "operationId": "Me.Friends.Person.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.UpdatePersonLastName",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "lastName",
            "in": "path",
            "description": "Usage: lastName={lastName}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "boolean",
                      "default": false
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})"
      ]
    },
    "/Me/Friends/$count": {
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.Friends",
        "responses": {
          "200": {
            "description": "The count of the resource",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ODataCountResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Me/Friends/$ref": {
      "get": {
        "tags": [
          "Me.Person"
        ],
        "summary": "Get ref of Friends from Me",
        "operationId": "Me.ListRefFriends",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "UserName desc",
                  "FirstName",
                  "FirstName desc",
                  "LastName",
                  "LastName desc",
                  "MiddleName",
                  "MiddleName desc",
                  "Gender",
                  "Gender desc",
                  "Age",
                  "Age desc",
                  "Emails",
                  "Emails desc",
                  "AddressInfo",
                  "AddressInfo desc",
                  "HomeAddress",
                  "HomeAddress desc",
                  "FavoriteFeature",
                  "FavoriteFeature desc",
                  "Features",
                  "Features desc"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property links",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of links of Person",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "Me.Person"
        ],
        "summary": "Create new navigation property ref to Friends for Me",
        "operationId": "Me.CreateRefFriends",
        "requestBody": {
          "description": "New navigation property ref value",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property link.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee": {
      "get": {
        "tags": [
          "Person.Employee"
        ],
        "summary": "Get the item of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person as Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result entities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()": {
      "get": {
        "tags": [
          "Me.Functions"
        ],
        "summary": "Invoke function GetFavoriteAirline",
        "operationId": "Me.Friends.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.GetFavoriteAirline",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airline"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()"
      ]
    },
    "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})": {
      "get": {
        "tags": [
          "Me.Functions"
        ],
        "summary": "Invoke function GetFriendsTrips",
        "operationId": "Me.Friends.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.GetFriendsTrips",
        "parameters": [
          {
            "name": "userName",
            "in": "path",
            "description": "Usage: userName={userName}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Employee",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})"
      ]
    },
    "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip": {
      "post": {
        "tags": [
          "Me.Actions"
        ],
        "summary": "Invoke action GetPeersForTrip",
        "operationId": "Me.Friends.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.GetPeersForTrip",
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "tripId": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Employee",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip"
      ]
    },
    "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip": {
      "post": {
        "tags": [
          "Me.Actions"
        ],
        "summary": "Invoke action ShareTrip",
        "description": "Details of the shared trip.",
        "operationId": "Me.Friends.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.ShareTrip",
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "tripId": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip"
      ]
    },
    "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})": {
      "get": {
        "tags": [
          "Me.Functions"
        ],
        "summary": "Invoke function UpdatePersonLastName",
        "operationId": "Me.Friends.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.UpdatePersonLastName",
        "parameters": [
          {
            "name": "lastName",
            "in": "path",
            "description": "Usage: lastName={lastName}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "boolean",
                      "default": false
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})"
      ]
    },
    "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager": {
      "get": {
        "tags": [
          "Person.Manager"
        ],
        "summary": "Get the item of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person as Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result entities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()": {
      "get": {
        "tags": [
          "Me.Functions"
        ],
        "summary": "Invoke function GetFavoriteAirline",
        "operationId": "Me.Friends.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.GetFavoriteAirline",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airline"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()"
      ]
    },
    "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})": {
      "get": {
        "tags": [
          "Me.Functions"
        ],
        "summary": "Invoke function GetFriendsTrips",
        "operationId": "Me.Friends.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.GetFriendsTrips",
        "parameters": [
          {
            "name": "userName",
            "in": "path",
            "description": "Usage: userName={userName}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Manager",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})"
      ]
    },
    "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip": {
      "post": {
        "tags": [
          "Me.Actions"
        ],
        "summary": "Invoke action GetPeersForTrip",
        "operationId": "Me.Friends.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.GetPeersForTrip",
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "tripId": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Manager",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip"
      ]
    },
    "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip": {
      "post": {
        "tags": [
          "Me.Actions"
        ],
        "summary": "Invoke action ShareTrip",
        "description": "Details of the shared trip.",
        "operationId": "Me.Friends.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.ShareTrip",
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "tripId": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip"
      ]
    },
    "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})": {
      "get": {
        "tags": [
          "Me.Functions"
        ],
        "summary": "Invoke function UpdatePersonLastName",
        "operationId": "Me.Friends.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.UpdatePersonLastName",
        "parameters": [
          {
            "name": "lastName",
            "in": "path",
            "description": "Usage: lastName={lastName}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "boolean",
                      "default": false
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})"
      ]
    },
    "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee": {
      "get": {
        "tags": [
          "Person.Employee"
        ],
        "summary": "Get the item of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person as Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result entities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()": {
      "get": {
        "tags": [
          "Me.Functions"
        ],
        "summary": "Invoke function GetFavoriteAirline",
        "operationId": "Me.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.GetFavoriteAirline",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airline"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()"
      ]
    },
    "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})": {
      "get": {
        "tags": [
          "Me.Functions"
        ],
        "summary": "Invoke function GetFriendsTrips",
        "operationId": "Me.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.GetFriendsTrips",
        "parameters": [
          {
            "name": "userName",
            "in": "path",
            "description": "Usage: userName={userName}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Employee",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})"
      ]
    },
    "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip": {
      "post": {
        "tags": [
          "Me.Actions"
        ],
        "summary": "Invoke action GetPeersForTrip",
        "operationId": "Me.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.GetPeersForTrip",
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "tripId": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Employee",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip"
      ]
    },
    "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip": {
      "post": {
        "tags": [
          "Me.Actions"
        ],
        "summary": "Invoke action ShareTrip",
        "description": "Details of the shared trip.",
        "operationId": "Me.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.ShareTrip",
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "tripId": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip"
      ]
    },
    "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})": {
      "get": {
        "tags": [
          "Me.Functions"
        ],
        "summary": "Invoke function UpdatePersonLastName",
        "operationId": "Me.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.UpdatePersonLastName",
        "parameters": [
          {
            "name": "lastName",
            "in": "path",
            "description": "Usage: lastName={lastName}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "boolean",
                      "default": false
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})"
      ]
    },
    "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()": {
      "get": {
        "tags": [
          "Me.Functions"
        ],
        "summary": "Invoke function GetFavoriteAirline",
        "operationId": "Me.GetFavoriteAirline",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airline"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()"
      ]
    },
    "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})": {
      "get": {
        "tags": [
          "Me.Functions"
        ],
        "summary": "Invoke function GetFriendsTrips",
        "operationId": "Me.GetFriendsTrips",
        "parameters": [
          {
            "name": "userName",
            "in": "path",
            "description": "Usage: userName={userName}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Person",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})"
      ]
    },
    "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip": {
      "post": {
        "tags": [
          "Me.Actions"
        ],
        "summary": "Invoke action GetPeersForTrip",
        "operationId": "Me.GetPeersForTrip",
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "tripId": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Person",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip"
      ]
    },
    "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager": {
      "get": {
        "tags": [
          "Person.Manager"
        ],
        "summary": "Get the item of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person as Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result entities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()": {
      "get": {
        "tags": [
          "Me.Functions"
        ],
        "summary": "Invoke function GetFavoriteAirline",
        "operationId": "Me.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.GetFavoriteAirline",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airline"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()"
      ]
    },
    "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})": {
      "get": {
        "tags": [
          "Me.Functions"
        ],
        "summary": "Invoke function GetFriendsTrips",
        "operationId": "Me.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.GetFriendsTrips",
        "parameters": [
          {
            "name": "userName",
            "in": "path",
            "description": "Usage: userName={userName}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Manager",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})"
      ]
    },
    "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip": {
      "post": {
        "tags": [
          "Me.Actions"
        ],
        "summary": "Invoke action GetPeersForTrip",
        "operationId": "Me.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.GetPeersForTrip",
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "tripId": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Manager",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip"
      ]
    },
    "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Hire": {
      "post": {
        "tags": [
          "Me.Actions"
        ],
        "summary": "Invoke action Hire",
        "description": "Hires someone for the company.",
        "operationId": "Me.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.Hire",
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "hire": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      }
    },
    "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip": {
      "post": {
        "tags": [
          "Me.Actions"
        ],
        "summary": "Invoke action ShareTrip",
        "description": "Details of the shared trip.",
        "operationId": "Me.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.ShareTrip",
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "tripId": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip"
      ]
    },
    "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})": {
      "get": {
        "tags": [
          "Me.Functions"
        ],
        "summary": "Invoke function UpdatePersonLastName",
        "operationId": "Me.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.UpdatePersonLastName",
        "parameters": [
          {
            "name": "lastName",
            "in": "path",
            "description": "Usage: lastName={lastName}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "boolean",
                      "default": false
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})"
      ]
    },
    "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip": {
      "post": {
        "tags": [
          "Me.Actions"
        ],
        "summary": "Invoke action ShareTrip",
        "description": "Details of the shared trip.",
        "operationId": "Me.ShareTrip",
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "tripId": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip"
      ]
    },
    "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})": {
      "get": {
        "tags": [
          "Me.Functions"
        ],
        "summary": "Invoke function UpdatePersonLastName",
        "operationId": "Me.UpdatePersonLastName",
        "parameters": [
          {
            "name": "lastName",
            "in": "path",
            "description": "Usage: lastName={lastName}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "boolean",
                      "default": false
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/Friends/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})"
      ]
    },
    "/Me/Trips": {
      "get": {
        "tags": [
          "Me.Trip"
        ],
        "summary": "Get Trips from Me",
        "description": "Collection of trips.",
        "operationId": "Me.ListTrips",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "TripId",
                  "TripId desc",
                  "ShareId",
                  "ShareId desc",
                  "Name",
                  "Name desc",
                  "Budget",
                  "Budget desc",
                  "Description",
                  "Description desc",
                  "Tags",
                  "Tags desc",
                  "StartsAt",
                  "StartsAt desc",
                  "EndsAt",
                  "EndsAt desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "TripId",
                  "ShareId",
                  "Name",
                  "Budget",
                  "Description",
                  "Tags",
                  "StartsAt",
                  "EndsAt",
                  "PlanItems"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "PlanItems"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Trip",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "Me.Trip"
        ],
        "summary": "Create new navigation property to Trips for Me",
        "description": "Collection of trips.",
        "operationId": "Me.CreateTrips",
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/Me/Trips/{TripId}": {
      "get": {
        "tags": [
          "Me.Trip"
        ],
        "summary": "Get Trips from Me",
        "description": "Collection of trips.",
        "operationId": "Me.GetTrips",
        "parameters": [
          {
            "name": "TripId",
            "in": "path",
            "description": "key: TripId of Trip",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "Trip"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "TripId",
                  "ShareId",
                  "Name",
                  "Budget",
                  "Description",
                  "Tags",
                  "StartsAt",
                  "EndsAt",
                  "PlanItems"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "PlanItems"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "Me.Trip"
        ],
        "summary": "Update the navigation property Trips in Me",
        "description": "Collection of trips.",
        "operationId": "Me.UpdateTrips",
        "parameters": [
          {
            "name": "TripId",
            "in": "path",
            "description": "key: TripId of Trip",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "Trip"
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "Me.Trip"
        ],
        "summary": "Delete navigation property Trips for Me",
        "description": "Collection of trips.",
        "operationId": "Me.DeleteTrips",
        "parameters": [
          {
            "name": "TripId",
            "in": "path",
            "description": "key: TripId of Trip",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "Trip"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/Me/Trips/{TripId}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetInvolvedPeople()": {
      "get": {
        "tags": [
          "Me.Functions"
        ],
        "summary": "Invoke function GetInvolvedPeople",
        "operationId": "Me.Trips.Trip.GetInvolvedPeople",
        "parameters": [
          {
            "name": "TripId",
            "in": "path",
            "description": "key: TripId of Trip",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "Trip"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Trip",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      }
    },
    "/Me/Trips/{TripId}/PlanItems": {
      "get": {
        "tags": [
          "Me.Trips.PlanItem"
        ],
        "summary": "Get PlanItems from Me",
        "operationId": "Me.Trips.ListPlanItems",
        "parameters": [
          {
            "name": "TripId",
            "in": "path",
            "description": "key: TripId of Trip",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "Trip"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "PlanItemId",
                  "PlanItemId desc",
                  "ConfirmationCode",
                  "ConfirmationCode desc",
                  "StartsAt",
                  "StartsAt desc",
                  "EndsAt",
                  "EndsAt desc",
                  "Duration",
                  "Duration desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "PlanItemId",
                  "ConfirmationCode",
                  "StartsAt",
                  "EndsAt",
                  "Duration"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of PlanItem",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.PlanItem"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/Me/Trips/{TripId}/PlanItems/{PlanItemId}/$ref": {
      "delete": {
        "tags": [
          "Me.Trips.PlanItem"
        ],
        "summary": "Delete ref of navigation property PlanItems for Me",
        "operationId": "Me.Trips.DeleteRefPlanItems",
        "parameters": [
          {
            "name": "TripId",
            "in": "path",
            "description": "key: TripId of Trip",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "Trip"
          },
          {
            "name": "PlanItemId",
            "in": "path",
            "description": "key: PlanItemId of PlanItem",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "PlanItem"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "@id",
            "in": "query",
            "description": "Delete Uri",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/Me/Trips/{TripId}/PlanItems/$count": {
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.PlanItems",
        "parameters": [
          {
            "name": "TripId",
            "in": "path",
            "description": "key: TripId of Trip",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "Trip"
          }
        ],
        "responses": {
          "200": {
            "description": "The count of the resource",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ODataCountResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Me/Trips/{TripId}/PlanItems/$ref": {
      "get": {
        "tags": [
          "Me.Trips.PlanItem"
        ],
        "summary": "Get ref of PlanItems from Me",
        "operationId": "Me.Trips.ListRefPlanItems",
        "parameters": [
          {
            "name": "TripId",
            "in": "path",
            "description": "key: TripId of Trip",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "Trip"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "PlanItemId",
                  "PlanItemId desc",
                  "ConfirmationCode",
                  "ConfirmationCode desc",
                  "StartsAt",
                  "StartsAt desc",
                  "EndsAt",
                  "EndsAt desc",
                  "Duration",
                  "Duration desc"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property links",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of links of PlanItem",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "Me.Trips.PlanItem"
        ],
        "summary": "Create new navigation property ref to PlanItems for Me",
        "operationId": "Me.Trips.CreateRefPlanItems",
        "parameters": [
          {
            "name": "TripId",
            "in": "path",
            "description": "key: TripId of Trip",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "Trip"
          }
        ],
        "requestBody": {
          "description": "New navigation property ref value",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property link.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/Me/Trips/$count": {
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.Trips",
        "responses": {
          "200": {
            "description": "The count of the resource",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ODataCountResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/NewComePeople": {
      "get": {
        "tags": [
          "NewComePeople.Person"
        ],
        "summary": "Get entities from NewComePeople",
        "operationId": "NewComePeople.Person.ListPerson",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "UserName desc",
                  "FirstName",
                  "FirstName desc",
                  "LastName",
                  "LastName desc",
                  "MiddleName",
                  "MiddleName desc",
                  "Gender",
                  "Gender desc",
                  "Age",
                  "Age desc",
                  "Emails",
                  "Emails desc",
                  "AddressInfo",
                  "AddressInfo desc",
                  "HomeAddress",
                  "HomeAddress desc",
                  "FavoriteFeature",
                  "FavoriteFeature desc",
                  "Features",
                  "Features desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Person",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "NewComePeople.Person"
        ],
        "summary": "Add new entity to NewComePeople",
        "operationId": "NewComePeople.Person.CreatePerson",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/NewComePeople/{UserName}": {
      "get": {
        "tags": [
          "NewComePeople.Person"
        ],
        "summary": "Get entity from NewComePeople by key",
        "operationId": "NewComePeople.Person.GetPerson",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "NewComePeople.Person"
        ],
        "summary": "Update entity in NewComePeople",
        "operationId": "NewComePeople.Person.UpdatePerson",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "NewComePeople.Person"
        ],
        "summary": "Delete entity from NewComePeople",
        "operationId": "NewComePeople.Person.DeletePerson",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/NewComePeople/{UserName}/BestFriend": {
      "get": {
        "tags": [
          "NewComePeople.Person"
        ],
        "summary": "Get BestFriend from NewComePeople",
        "description": "The best friend.",
        "operationId": "NewComePeople.GetBestFriend",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/NewComePeople/{UserName}/BestFriend/$ref": {
      "get": {
        "tags": [
          "NewComePeople.Person"
        ],
        "summary": "Get ref of BestFriend from NewComePeople",
        "description": "The best friend.",
        "operationId": "NewComePeople.GetRefBestFriend",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property link",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "put": {
        "tags": [
          "NewComePeople.Person"
        ],
        "summary": "Update the ref of navigation property BestFriend in NewComePeople",
        "description": "The best friend.",
        "operationId": "NewComePeople.UpdateRefBestFriend",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "New navigation property ref values",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "NewComePeople.Person"
        ],
        "summary": "Delete ref of navigation property BestFriend for NewComePeople",
        "description": "The best friend.",
        "operationId": "NewComePeople.DeleteRefBestFriend",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee": {
      "get": {
        "tags": [
          "Person.Employee"
        ],
        "summary": "Get the item of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person as Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result entities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()": {
      "get": {
        "tags": [
          "NewComePeople.Functions"
        ],
        "summary": "Invoke function GetFavoriteAirline",
        "operationId": "NewComePeople.Person.BestFriend.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.GetFavoriteAirline",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airline"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/NewComePeople/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()"
      ]
    },
    "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})": {
      "get": {
        "tags": [
          "NewComePeople.Functions"
        ],
        "summary": "Invoke function GetFriendsTrips",
        "operationId": "NewComePeople.Person.BestFriend.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.GetFriendsTrips",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "Usage: userName={userName}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Employee",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/NewComePeople/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})"
      ]
    },
    "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip": {
      "post": {
        "tags": [
          "NewComePeople.Actions"
        ],
        "summary": "Invoke action GetPeersForTrip",
        "operationId": "NewComePeople.Person.BestFriend.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.GetPeersForTrip",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "tripId": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Employee",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/NewComePeople/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip"
      ]
    },
    "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip": {
      "post": {
        "tags": [
          "NewComePeople.Actions"
        ],
        "summary": "Invoke action ShareTrip",
        "description": "Details of the shared trip.",
        "operationId": "NewComePeople.Person.BestFriend.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.ShareTrip",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "tripId": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/NewComePeople/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip"
      ]
    },
    "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})": {
      "get": {
        "tags": [
          "NewComePeople.Functions"
        ],
        "summary": "Invoke function UpdatePersonLastName",
        "operationId": "NewComePeople.Person.BestFriend.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.UpdatePersonLastName",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "lastName",
            "in": "path",
            "description": "Usage: lastName={lastName}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "boolean",
                      "default": false
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/NewComePeople/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})"
      ]
    },
    "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager": {
      "get": {
        "tags": [
          "Person.Manager"
        ],
        "summary": "Get the item of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person as Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result entities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()": {
      "get": {
        "tags": [
          "NewComePeople.Functions"
        ],
        "summary": "Invoke function GetFavoriteAirline",
        "operationId": "NewComePeople.Person.BestFriend.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.GetFavoriteAirline",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airline"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/NewComePeople/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()"
      ]
    },
    "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})": {
      "get": {
        "tags": [
          "NewComePeople.Functions"
        ],
        "summary": "Invoke function GetFriendsTrips",
        "operationId": "NewComePeople.Person.BestFriend.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.GetFriendsTrips",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "Usage: userName={userName}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Manager",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/NewComePeople/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})"
      ]
    },
    "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip": {
      "post": {
        "tags": [
          "NewComePeople.Actions"
        ],
        "summary": "Invoke action GetPeersForTrip",
        "operationId": "NewComePeople.Person.BestFriend.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.GetPeersForTrip",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "tripId": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Manager",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/NewComePeople/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip"
      ]
    },
    "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip": {
      "post": {
        "tags": [
          "NewComePeople.Actions"
        ],
        "summary": "Invoke action ShareTrip",
        "description": "Details of the shared trip.",
        "operationId": "NewComePeople.Person.BestFriend.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.ShareTrip",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "tripId": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/NewComePeople/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip"
      ]
    },
    "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})": {
      "get": {
        "tags": [
          "NewComePeople.Functions"
        ],
        "summary": "Invoke function UpdatePersonLastName",
        "operationId": "NewComePeople.Person.BestFriend.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.UpdatePersonLastName",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "lastName",
            "in": "path",
            "description": "Usage: lastName={lastName}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "boolean",
                      "default": false
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/NewComePeople/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})"
      ]
    },
    "/NewComePeople/{UserName}/Friends": {
      "get": {
        "tags": [
          "NewComePeople.Person"
        ],
        "summary": "Get Friends from NewComePeople",
        "operationId": "NewComePeople.ListFriends",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "UserName desc",
                  "FirstName",
                  "FirstName desc",
                  "LastName",
                  "LastName desc",
                  "MiddleName",
                  "MiddleName desc",
                  "Gender",
                  "Gender desc",
                  "Age",
                  "Age desc",
                  "Emails",
                  "Emails desc",
                  "AddressInfo",
                  "AddressInfo desc",
                  "HomeAddress",
                  "HomeAddress desc",
                  "FavoriteFeature",
                  "FavoriteFeature desc",
                  "Features",
                  "Features desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Person",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/NewComePeople/{UserName}/Friends/{UserName1}/$ref": {
      "delete": {
        "tags": [
          "NewComePeople.Person"
        ],
        "summary": "Delete ref of navigation property Friends for NewComePeople",
        "operationId": "NewComePeople.DeleteRefFriends",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "@id",
            "in": "query",
            "description": "Delete Uri",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee": {
      "get": {
        "tags": [
          "Person.Employee"
        ],
        "summary": "Get the item of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person as Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result entities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()": {
      "get": {
        "tags": [
          "NewComePeople.Functions"
        ],
        "summary": "Invoke function GetFavoriteAirline",
        "operationId": "NewComePeople.Person.Friends.Person.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.GetFavoriteAirline",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airline"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/NewComePeople/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()"
      ]
    },
    "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})": {
      "get": {
        "tags": [
          "NewComePeople.Functions"
        ],
        "summary": "Invoke function GetFriendsTrips",
        "operationId": "NewComePeople.Person.Friends.Person.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.GetFriendsTrips",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "Usage: userName={userName}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Employee",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/NewComePeople/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})"
      ]
    },
    "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip": {
      "post": {
        "tags": [
          "NewComePeople.Actions"
        ],
        "summary": "Invoke action GetPeersForTrip",
        "operationId": "NewComePeople.Person.Friends.Person.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.GetPeersForTrip",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "tripId": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Employee",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/NewComePeople/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip"
      ]
    },
    "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip": {
      "post": {
        "tags": [
          "NewComePeople.Actions"
        ],
        "summary": "Invoke action ShareTrip",
        "description": "Details of the shared trip.",
        "operationId": "NewComePeople.Person.Friends.Person.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.ShareTrip",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "tripId": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/NewComePeople/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip"
      ]
    },
    "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})": {
      "get": {
        "tags": [
          "NewComePeople.Functions"
        ],
        "summary": "Invoke function UpdatePersonLastName",
        "operationId": "NewComePeople.Person.Friends.Person.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.UpdatePersonLastName",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "lastName",
            "in": "path",
            "description": "Usage: lastName={lastName}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "boolean",
                      "default": false
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/NewComePeople/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})"
      ]
    },
    "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager": {
      "get": {
        "tags": [
          "Person.Manager"
        ],
        "summary": "Get the item of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person as Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result entities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()": {
      "get": {
        "tags": [
          "NewComePeople.Functions"
        ],
        "summary": "Invoke function GetFavoriteAirline",
        "operationId": "NewComePeople.Person.Friends.Person.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.GetFavoriteAirline",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airline"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/NewComePeople/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()"
      ]
    },
    "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})": {
      "get": {
        "tags": [
          "NewComePeople.Functions"
        ],
        "summary": "Invoke function GetFriendsTrips",
        "operationId": "NewComePeople.Person.Friends.Person.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.GetFriendsTrips",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "Usage: userName={userName}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Manager",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/NewComePeople/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})"
      ]
    },
    "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip": {
      "post": {
        "tags": [
          "NewComePeople.Actions"
        ],
        "summary": "Invoke action GetPeersForTrip",
        "operationId": "NewComePeople.Person.Friends.Person.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.GetPeersForTrip",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "tripId": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Manager",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/NewComePeople/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip"
      ]
    },
    "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip": {
      "post": {
        "tags": [
          "NewComePeople.Actions"
        ],
        "summary": "Invoke action ShareTrip",
        "description": "Details of the shared trip.",
        "operationId": "NewComePeople.Person.Friends.Person.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.ShareTrip",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "tripId": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/NewComePeople/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip"
      ]
    },
    "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})": {
      "get": {
        "tags": [
          "NewComePeople.Functions"
        ],
        "summary": "Invoke function UpdatePersonLastName",
        "operationId": "NewComePeople.Person.Friends.Person.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.UpdatePersonLastName",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "lastName",
            "in": "path",
            "description": "Usage: lastName={lastName}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "boolean",
                      "default": false
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/NewComePeople/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})"
      ]
    },
    "/NewComePeople/{UserName}/Friends/$count": {
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.Friends",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "description": "The count of the resource",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ODataCountResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/NewComePeople/{UserName}/Friends/$ref": {
      "get": {
        "tags": [
          "NewComePeople.Person"
        ],
        "summary": "Get ref of Friends from NewComePeople",
        "operationId": "NewComePeople.ListRefFriends",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "UserName desc",
                  "FirstName",
                  "FirstName desc",
                  "LastName",
                  "LastName desc",
                  "MiddleName",
                  "MiddleName desc",
                  "Gender",
                  "Gender desc",
                  "Age",
                  "Age desc",
                  "Emails",
                  "Emails desc",
                  "AddressInfo",
                  "AddressInfo desc",
                  "HomeAddress",
                  "HomeAddress desc",
                  "FavoriteFeature",
                  "FavoriteFeature desc",
                  "Features",
                  "Features desc"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property links",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of links of Person",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "NewComePeople.Person"
        ],
        "summary": "Create new navigation property ref to Friends for NewComePeople",
        "operationId": "NewComePeople.CreateRefFriends",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "New navigation property ref value",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property link.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee": {
      "get": {
        "tags": [
          "Person.Employee"
        ],
        "summary": "Get the item of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person as Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result entities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()": {
      "get": {
        "tags": [
          "NewComePeople.Functions"
        ],
        "summary": "Invoke function GetFavoriteAirline",
        "operationId": "NewComePeople.Person.Friends.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.GetFavoriteAirline",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airline"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/NewComePeople/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()"
      ]
    },
    "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})": {
      "get": {
        "tags": [
          "NewComePeople.Functions"
        ],
        "summary": "Invoke function GetFriendsTrips",
        "operationId": "NewComePeople.Person.Friends.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.GetFriendsTrips",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "Usage: userName={userName}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Employee",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/NewComePeople/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})"
      ]
    },
    "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip": {
      "post": {
        "tags": [
          "NewComePeople.Actions"
        ],
        "summary": "Invoke action GetPeersForTrip",
        "operationId": "NewComePeople.Person.Friends.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.GetPeersForTrip",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "tripId": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Employee",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/NewComePeople/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip"
      ]
    },
    "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip": {
      "post": {
        "tags": [
          "NewComePeople.Actions"
        ],
        "summary": "Invoke action ShareTrip",
        "description": "Details of the shared trip.",
        "operationId": "NewComePeople.Person.Friends.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.ShareTrip",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "tripId": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/NewComePeople/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip"
      ]
    },
    "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})": {
      "get": {
        "tags": [
          "NewComePeople.Functions"
        ],
        "summary": "Invoke function UpdatePersonLastName",
        "operationId": "NewComePeople.Person.Friends.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.UpdatePersonLastName",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "lastName",
            "in": "path",
            "description": "Usage: lastName={lastName}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "boolean",
                      "default": false
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/NewComePeople/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})"
      ]
    },
    "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager": {
      "get": {
        "tags": [
          "Person.Manager"
        ],
        "summary": "Get the item of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person as Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result entities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()": {
      "get": {
        "tags": [
          "NewComePeople.Functions"
        ],
        "summary": "Invoke function GetFavoriteAirline",
        "operationId": "NewComePeople.Person.Friends.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.GetFavoriteAirline",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airline"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/NewComePeople/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()"
      ]
    },
    "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})": {
      "get": {
        "tags": [
          "NewComePeople.Functions"
        ],
        "summary": "Invoke function GetFriendsTrips",
        "operationId": "NewComePeople.Person.Friends.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.GetFriendsTrips",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "Usage: userName={userName}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Manager",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/NewComePeople/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})"
      ]
    },
    "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip": {
      "post": {
        "tags": [
          "NewComePeople.Actions"
        ],
        "summary": "Invoke action GetPeersForTrip",
        "operationId": "NewComePeople.Person.Friends.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.GetPeersForTrip",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "tripId": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Manager",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/NewComePeople/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip"
      ]
    },
    "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip": {
      "post": {
        "tags": [
          "NewComePeople.Actions"
        ],
        "summary": "Invoke action ShareTrip",
        "description": "Details of the shared trip.",
        "operationId": "NewComePeople.Person.Friends.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.ShareTrip",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "tripId": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/NewComePeople/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip"
      ]
    },
    "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})": {
      "get": {
        "tags": [
          "NewComePeople.Functions"
        ],
        "summary": "Invoke function UpdatePersonLastName",
        "operationId": "NewComePeople.Person.Friends.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.UpdatePersonLastName",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "lastName",
            "in": "path",
            "description": "Usage: lastName={lastName}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "boolean",
                      "default": false
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/NewComePeople/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})"
      ]
    },
    "/NewComePeople/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()": {
      "get": {
        "tags": [
          "NewComePeople.Functions"
        ],
        "summary": "Invoke function GetFavoriteAirline",
        "operationId": "NewComePeople.Person.GetFavoriteAirline",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airline"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()"
      ]
    },
    "/NewComePeople/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})": {
      "get": {
        "tags": [
          "NewComePeople.Functions"
        ],
        "summary": "Invoke function GetFriendsTrips",
        "operationId": "NewComePeople.Person.GetFriendsTrips",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "Usage: userName={userName}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Person",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})"
      ]
    },
    "/NewComePeople/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip": {
      "post": {
        "tags": [
          "NewComePeople.Actions"
        ],
        "summary": "Invoke action GetPeersForTrip",
        "operationId": "NewComePeople.Person.GetPeersForTrip",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "tripId": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Person",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip"
      ]
    },
    "/NewComePeople/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Hire": {
      "post": {
        "tags": [
          "NewComePeople.Actions"
        ],
        "summary": "Invoke action Hire",
        "description": "Hires someone for the company.",
        "operationId": "NewComePeople.Person.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.Hire",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "hire": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      }
    },
    "/NewComePeople/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip": {
      "post": {
        "tags": [
          "NewComePeople.Actions"
        ],
        "summary": "Invoke action ShareTrip",
        "description": "Details of the shared trip.",
        "operationId": "NewComePeople.Person.ShareTrip",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "tripId": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip"
      ]
    },
    "/NewComePeople/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})": {
      "get": {
        "tags": [
          "NewComePeople.Functions"
        ],
        "summary": "Invoke function UpdatePersonLastName",
        "operationId": "NewComePeople.Person.UpdatePersonLastName",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "lastName",
            "in": "path",
            "description": "Usage: lastName={lastName}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "boolean",
                      "default": false
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/NewComePeople/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/NewComePeople/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/NewComePeople/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})"
      ]
    },
    "/NewComePeople/{UserName}/Trips": {
      "get": {
        "tags": [
          "NewComePeople.Trip"
        ],
        "summary": "Get Trips from NewComePeople",
        "description": "Collection of trips.",
        "operationId": "NewComePeople.ListTrips",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "TripId",
                  "TripId desc",
                  "ShareId",
                  "ShareId desc",
                  "Name",
                  "Name desc",
                  "Budget",
                  "Budget desc",
                  "Description",
                  "Description desc",
                  "Tags",
                  "Tags desc",
                  "StartsAt",
                  "StartsAt desc",
                  "EndsAt",
                  "EndsAt desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "TripId",
                  "ShareId",
                  "Name",
                  "Budget",
                  "Description",
                  "Tags",
                  "StartsAt",
                  "EndsAt",
                  "PlanItems"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "PlanItems"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Trip",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "NewComePeople.Trip"
        ],
        "summary": "Create new navigation property to Trips for NewComePeople",
        "description": "Collection of trips.",
        "operationId": "NewComePeople.CreateTrips",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/NewComePeople/{UserName}/Trips/{TripId}": {
      "get": {
        "tags": [
          "NewComePeople.Trip"
        ],
        "summary": "Get Trips from NewComePeople",
        "description": "Collection of trips.",
        "operationId": "NewComePeople.GetTrips",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "TripId",
            "in": "path",
            "description": "key: TripId of Trip",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "Trip"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "TripId",
                  "ShareId",
                  "Name",
                  "Budget",
                  "Description",
                  "Tags",
                  "StartsAt",
                  "EndsAt",
                  "PlanItems"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "PlanItems"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "NewComePeople.Trip"
        ],
        "summary": "Update the navigation property Trips in NewComePeople",
        "description": "Collection of trips.",
        "operationId": "NewComePeople.UpdateTrips",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "TripId",
            "in": "path",
            "description": "key: TripId of Trip",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "Trip"
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "NewComePeople.Trip"
        ],
        "summary": "Delete navigation property Trips for NewComePeople",
        "description": "Collection of trips.",
        "operationId": "NewComePeople.DeleteTrips",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "TripId",
            "in": "path",
            "description": "key: TripId of Trip",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "Trip"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/NewComePeople/{UserName}/Trips/{TripId}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetInvolvedPeople()": {
      "get": {
        "tags": [
          "NewComePeople.Functions"
        ],
        "summary": "Invoke function GetInvolvedPeople",
        "operationId": "NewComePeople.Person.Trips.Trip.GetInvolvedPeople",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "TripId",
            "in": "path",
            "description": "key: TripId of Trip",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "Trip"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Trip",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      }
    },
    "/NewComePeople/{UserName}/Trips/{TripId}/PlanItems": {
      "get": {
        "tags": [
          "NewComePeople.Trips.PlanItem"
        ],
        "summary": "Get PlanItems from NewComePeople",
        "operationId": "NewComePeople.Trips.ListPlanItems",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "TripId",
            "in": "path",
            "description": "key: TripId of Trip",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "Trip"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "PlanItemId",
                  "PlanItemId desc",
                  "ConfirmationCode",
                  "ConfirmationCode desc",
                  "StartsAt",
                  "StartsAt desc",
                  "EndsAt",
                  "EndsAt desc",
                  "Duration",
                  "Duration desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "PlanItemId",
                  "ConfirmationCode",
                  "StartsAt",
                  "EndsAt",
                  "Duration"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of PlanItem",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.PlanItem"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/NewComePeople/{UserName}/Trips/{TripId}/PlanItems/{PlanItemId}/$ref": {
      "delete": {
        "tags": [
          "NewComePeople.Trips.PlanItem"
        ],
        "summary": "Delete ref of navigation property PlanItems for NewComePeople",
        "operationId": "NewComePeople.Trips.DeleteRefPlanItems",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "TripId",
            "in": "path",
            "description": "key: TripId of Trip",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "Trip"
          },
          {
            "name": "PlanItemId",
            "in": "path",
            "description": "key: PlanItemId of PlanItem",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "PlanItem"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "@id",
            "in": "query",
            "description": "Delete Uri",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/NewComePeople/{UserName}/Trips/{TripId}/PlanItems/$count": {
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.PlanItems",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "TripId",
            "in": "path",
            "description": "key: TripId of Trip",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "Trip"
          }
        ],
        "responses": {
          "200": {
            "description": "The count of the resource",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ODataCountResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/NewComePeople/{UserName}/Trips/{TripId}/PlanItems/$ref": {
      "get": {
        "tags": [
          "NewComePeople.Trips.PlanItem"
        ],
        "summary": "Get ref of PlanItems from NewComePeople",
        "operationId": "NewComePeople.Trips.ListRefPlanItems",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "TripId",
            "in": "path",
            "description": "key: TripId of Trip",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "Trip"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "PlanItemId",
                  "PlanItemId desc",
                  "ConfirmationCode",
                  "ConfirmationCode desc",
                  "StartsAt",
                  "StartsAt desc",
                  "EndsAt",
                  "EndsAt desc",
                  "Duration",
                  "Duration desc"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property links",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of links of PlanItem",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "NewComePeople.Trips.PlanItem"
        ],
        "summary": "Create new navigation property ref to PlanItems for NewComePeople",
        "operationId": "NewComePeople.Trips.CreateRefPlanItems",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "TripId",
            "in": "path",
            "description": "key: TripId of Trip",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "Trip"
          }
        ],
        "requestBody": {
          "description": "New navigation property ref value",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property link.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/NewComePeople/{UserName}/Trips/$count": {
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.Trips",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "description": "The count of the resource",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ODataCountResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/NewComePeople/$count": {
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.NewComePeople",
        "responses": {
          "200": {
            "description": "The count of the resource",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ODataCountResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/People": {
      "get": {
        "tags": [
          "People.Person"
        ],
        "summary": "Get entities from People",
        "operationId": "People.Person.ListPerson",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "UserName desc",
                  "FirstName",
                  "FirstName desc",
                  "LastName",
                  "LastName desc",
                  "MiddleName",
                  "MiddleName desc",
                  "Gender",
                  "Gender desc",
                  "Age",
                  "Age desc",
                  "Emails",
                  "Emails desc",
                  "AddressInfo",
                  "AddressInfo desc",
                  "HomeAddress",
                  "HomeAddress desc",
                  "FavoriteFeature",
                  "FavoriteFeature desc",
                  "Features",
                  "Features desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Person",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "People.Person"
        ],
        "summary": "Add new entity to People",
        "operationId": "People.Person.CreatePerson",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/People/{UserName}": {
      "get": {
        "tags": [
          "People.Person"
        ],
        "summary": "Get entity from People by key",
        "operationId": "People.Person.GetPerson",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "People.Person"
        ],
        "summary": "Update entity in People",
        "operationId": "People.Person.UpdatePerson",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "People.Person"
        ],
        "summary": "Delete entity from People",
        "operationId": "People.Person.DeletePerson",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/People/{UserName}/BestFriend": {
      "get": {
        "tags": [
          "People.Person"
        ],
        "summary": "Get BestFriend from People",
        "description": "The best friend.",
        "operationId": "People.GetBestFriend",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/People/{UserName}/BestFriend/$ref": {
      "get": {
        "tags": [
          "People.Person"
        ],
        "summary": "Get ref of BestFriend from People",
        "description": "The best friend.",
        "operationId": "People.GetRefBestFriend",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property link",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "put": {
        "tags": [
          "People.Person"
        ],
        "summary": "Update the ref of navigation property BestFriend in People",
        "description": "The best friend.",
        "operationId": "People.UpdateRefBestFriend",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "New navigation property ref values",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "People.Person"
        ],
        "summary": "Delete ref of navigation property BestFriend for People",
        "description": "The best friend.",
        "operationId": "People.DeleteRefBestFriend",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee": {
      "get": {
        "tags": [
          "Person.Employee"
        ],
        "summary": "Get the item of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person as Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result entities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()": {
      "get": {
        "tags": [
          "People.Functions"
        ],
        "summary": "Invoke function GetFavoriteAirline",
        "operationId": "People.Person.BestFriend.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.GetFavoriteAirline",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airline"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()"
      ]
    },
    "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})": {
      "get": {
        "tags": [
          "People.Functions"
        ],
        "summary": "Invoke function GetFriendsTrips",
        "operationId": "People.Person.BestFriend.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.GetFriendsTrips",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "Usage: userName={userName}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Employee",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})"
      ]
    },
    "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip": {
      "post": {
        "tags": [
          "People.Actions"
        ],
        "summary": "Invoke action GetPeersForTrip",
        "operationId": "People.Person.BestFriend.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.GetPeersForTrip",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "tripId": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Employee",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip"
      ]
    },
    "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip": {
      "post": {
        "tags": [
          "People.Actions"
        ],
        "summary": "Invoke action ShareTrip",
        "description": "Details of the shared trip.",
        "operationId": "People.Person.BestFriend.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.ShareTrip",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "tripId": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip"
      ]
    },
    "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})": {
      "get": {
        "tags": [
          "People.Functions"
        ],
        "summary": "Invoke function UpdatePersonLastName",
        "operationId": "People.Person.BestFriend.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.UpdatePersonLastName",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "lastName",
            "in": "path",
            "description": "Usage: lastName={lastName}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "boolean",
                      "default": false
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})"
      ]
    },
    "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager": {
      "get": {
        "tags": [
          "Person.Manager"
        ],
        "summary": "Get the item of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person as Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result entities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()": {
      "get": {
        "tags": [
          "People.Functions"
        ],
        "summary": "Invoke function GetFavoriteAirline",
        "operationId": "People.Person.BestFriend.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.GetFavoriteAirline",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airline"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()"
      ]
    },
    "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})": {
      "get": {
        "tags": [
          "People.Functions"
        ],
        "summary": "Invoke function GetFriendsTrips",
        "operationId": "People.Person.BestFriend.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.GetFriendsTrips",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "Usage: userName={userName}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Manager",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})"
      ]
    },
    "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip": {
      "post": {
        "tags": [
          "People.Actions"
        ],
        "summary": "Invoke action GetPeersForTrip",
        "operationId": "People.Person.BestFriend.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.GetPeersForTrip",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "tripId": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Manager",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip"
      ]
    },
    "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip": {
      "post": {
        "tags": [
          "People.Actions"
        ],
        "summary": "Invoke action ShareTrip",
        "description": "Details of the shared trip.",
        "operationId": "People.Person.BestFriend.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.ShareTrip",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "tripId": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip"
      ]
    },
    "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})": {
      "get": {
        "tags": [
          "People.Functions"
        ],
        "summary": "Invoke function UpdatePersonLastName",
        "operationId": "People.Person.BestFriend.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.UpdatePersonLastName",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "lastName",
            "in": "path",
            "description": "Usage: lastName={lastName}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "boolean",
                      "default": false
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})"
      ]
    },
    "/People/{UserName}/Friends": {
      "get": {
        "tags": [
          "People.Person"
        ],
        "summary": "Get Friends from People",
        "operationId": "People.ListFriends",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "UserName desc",
                  "FirstName",
                  "FirstName desc",
                  "LastName",
                  "LastName desc",
                  "MiddleName",
                  "MiddleName desc",
                  "Gender",
                  "Gender desc",
                  "Age",
                  "Age desc",
                  "Emails",
                  "Emails desc",
                  "AddressInfo",
                  "AddressInfo desc",
                  "HomeAddress",
                  "HomeAddress desc",
                  "FavoriteFeature",
                  "FavoriteFeature desc",
                  "Features",
                  "Features desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Person",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/People/{UserName}/Friends/{UserName1}/$ref": {
      "delete": {
        "tags": [
          "People.Person"
        ],
        "summary": "Delete ref of navigation property Friends for People",
        "operationId": "People.DeleteRefFriends",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "@id",
            "in": "query",
            "description": "Delete Uri",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee": {
      "get": {
        "tags": [
          "Person.Employee"
        ],
        "summary": "Get the item of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person as Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result entities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()": {
      "get": {
        "tags": [
          "People.Functions"
        ],
        "summary": "Invoke function GetFavoriteAirline",
        "operationId": "People.Person.Friends.Person.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.GetFavoriteAirline",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airline"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()"
      ]
    },
    "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})": {
      "get": {
        "tags": [
          "People.Functions"
        ],
        "summary": "Invoke function GetFriendsTrips",
        "operationId": "People.Person.Friends.Person.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.GetFriendsTrips",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "Usage: userName={userName}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Employee",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})"
      ]
    },
    "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip": {
      "post": {
        "tags": [
          "People.Actions"
        ],
        "summary": "Invoke action GetPeersForTrip",
        "operationId": "People.Person.Friends.Person.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.GetPeersForTrip",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "tripId": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Employee",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip"
      ]
    },
    "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip": {
      "post": {
        "tags": [
          "People.Actions"
        ],
        "summary": "Invoke action ShareTrip",
        "description": "Details of the shared trip.",
        "operationId": "People.Person.Friends.Person.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.ShareTrip",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "tripId": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip"
      ]
    },
    "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})": {
      "get": {
        "tags": [
          "People.Functions"
        ],
        "summary": "Invoke function UpdatePersonLastName",
        "operationId": "People.Person.Friends.Person.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.UpdatePersonLastName",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "lastName",
            "in": "path",
            "description": "Usage: lastName={lastName}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "boolean",
                      "default": false
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})"
      ]
    },
    "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager": {
      "get": {
        "tags": [
          "Person.Manager"
        ],
        "summary": "Get the item of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person as Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result entities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()": {
      "get": {
        "tags": [
          "People.Functions"
        ],
        "summary": "Invoke function GetFavoriteAirline",
        "operationId": "People.Person.Friends.Person.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.GetFavoriteAirline",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airline"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()"
      ]
    },
    "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})": {
      "get": {
        "tags": [
          "People.Functions"
        ],
        "summary": "Invoke function GetFriendsTrips",
        "operationId": "People.Person.Friends.Person.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.GetFriendsTrips",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "Usage: userName={userName}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Manager",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})"
      ]
    },
    "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip": {
      "post": {
        "tags": [
          "People.Actions"
        ],
        "summary": "Invoke action GetPeersForTrip",
        "operationId": "People.Person.Friends.Person.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.GetPeersForTrip",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "tripId": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Manager",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip"
      ]
    },
    "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip": {
      "post": {
        "tags": [
          "People.Actions"
        ],
        "summary": "Invoke action ShareTrip",
        "description": "Details of the shared trip.",
        "operationId": "People.Person.Friends.Person.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.ShareTrip",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "tripId": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip"
      ]
    },
    "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})": {
      "get": {
        "tags": [
          "People.Functions"
        ],
        "summary": "Invoke function UpdatePersonLastName",
        "operationId": "People.Person.Friends.Person.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.UpdatePersonLastName",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "UserName1",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "lastName",
            "in": "path",
            "description": "Usage: lastName={lastName}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "boolean",
                      "default": false
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})"
      ]
    },
    "/People/{UserName}/Friends/$count": {
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.Friends",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "description": "The count of the resource",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ODataCountResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/People/{UserName}/Friends/$ref": {
      "get": {
        "tags": [
          "People.Person"
        ],
        "summary": "Get ref of Friends from People",
        "operationId": "People.ListRefFriends",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "UserName desc",
                  "FirstName",
                  "FirstName desc",
                  "LastName",
                  "LastName desc",
                  "MiddleName",
                  "MiddleName desc",
                  "Gender",
                  "Gender desc",
                  "Age",
                  "Age desc",
                  "Emails",
                  "Emails desc",
                  "AddressInfo",
                  "AddressInfo desc",
                  "HomeAddress",
                  "HomeAddress desc",
                  "FavoriteFeature",
                  "FavoriteFeature desc",
                  "Features",
                  "Features desc"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property links",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of links of Person",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "People.Person"
        ],
        "summary": "Create new navigation property ref to Friends for People",
        "operationId": "People.CreateRefFriends",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "New navigation property ref value",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property link.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee": {
      "get": {
        "tags": [
          "Person.Employee"
        ],
        "summary": "Get the item of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person as Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result entities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()": {
      "get": {
        "tags": [
          "People.Functions"
        ],
        "summary": "Invoke function GetFavoriteAirline",
        "operationId": "People.Person.Friends.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.GetFavoriteAirline",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airline"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()"
      ]
    },
    "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})": {
      "get": {
        "tags": [
          "People.Functions"
        ],
        "summary": "Invoke function GetFriendsTrips",
        "operationId": "People.Person.Friends.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.GetFriendsTrips",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "Usage: userName={userName}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Employee",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})"
      ]
    },
    "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip": {
      "post": {
        "tags": [
          "People.Actions"
        ],
        "summary": "Invoke action GetPeersForTrip",
        "operationId": "People.Person.Friends.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.GetPeersForTrip",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "tripId": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Employee",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip"
      ]
    },
    "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip": {
      "post": {
        "tags": [
          "People.Actions"
        ],
        "summary": "Invoke action ShareTrip",
        "description": "Details of the shared trip.",
        "operationId": "People.Person.Friends.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.ShareTrip",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "tripId": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip"
      ]
    },
    "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})": {
      "get": {
        "tags": [
          "People.Functions"
        ],
        "summary": "Invoke function UpdatePersonLastName",
        "operationId": "People.Person.Friends.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.UpdatePersonLastName",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "lastName",
            "in": "path",
            "description": "Usage: lastName={lastName}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "boolean",
                      "default": false
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})"
      ]
    },
    "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager": {
      "get": {
        "tags": [
          "Person.Manager"
        ],
        "summary": "Get the item of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person as Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result entities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()": {
      "get": {
        "tags": [
          "People.Functions"
        ],
        "summary": "Invoke function GetFavoriteAirline",
        "operationId": "People.Person.Friends.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.GetFavoriteAirline",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airline"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()"
      ]
    },
    "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})": {
      "get": {
        "tags": [
          "People.Functions"
        ],
        "summary": "Invoke function GetFriendsTrips",
        "operationId": "People.Person.Friends.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.GetFriendsTrips",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "Usage: userName={userName}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Manager",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})"
      ]
    },
    "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip": {
      "post": {
        "tags": [
          "People.Actions"
        ],
        "summary": "Invoke action GetPeersForTrip",
        "operationId": "People.Person.Friends.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.GetPeersForTrip",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "tripId": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Manager",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip"
      ]
    },
    "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip": {
      "post": {
        "tags": [
          "People.Actions"
        ],
        "summary": "Invoke action ShareTrip",
        "description": "Details of the shared trip.",
        "operationId": "People.Person.Friends.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.ShareTrip",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "tripId": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip"
      ]
    },
    "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})": {
      "get": {
        "tags": [
          "People.Functions"
        ],
        "summary": "Invoke function UpdatePersonLastName",
        "operationId": "People.Person.Friends.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.UpdatePersonLastName",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "lastName",
            "in": "path",
            "description": "Usage: lastName={lastName}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "boolean",
                      "default": false
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})"
      ]
    },
    "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee": {
      "get": {
        "tags": [
          "Person.Employee"
        ],
        "summary": "Get the item of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person as Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result entities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()": {
      "get": {
        "tags": [
          "People.Functions"
        ],
        "summary": "Invoke function GetFavoriteAirline",
        "operationId": "People.Person.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.GetFavoriteAirline",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airline"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()"
      ]
    },
    "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})": {
      "get": {
        "tags": [
          "People.Functions"
        ],
        "summary": "Invoke function GetFriendsTrips",
        "operationId": "People.Person.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.GetFriendsTrips",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "Usage: userName={userName}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Employee",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})"
      ]
    },
    "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip": {
      "post": {
        "tags": [
          "People.Actions"
        ],
        "summary": "Invoke action GetPeersForTrip",
        "operationId": "People.Person.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.GetPeersForTrip",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "tripId": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Employee",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip"
      ]
    },
    "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip": {
      "post": {
        "tags": [
          "People.Actions"
        ],
        "summary": "Invoke action ShareTrip",
        "description": "Details of the shared trip.",
        "operationId": "People.Person.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.ShareTrip",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "tripId": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip"
      ]
    },
    "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})": {
      "get": {
        "tags": [
          "People.Functions"
        ],
        "summary": "Invoke function UpdatePersonLastName",
        "operationId": "People.Person.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.UpdatePersonLastName",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "lastName",
            "in": "path",
            "description": "Usage: lastName={lastName}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "boolean",
                      "default": false
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})"
      ]
    },
    "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()": {
      "get": {
        "tags": [
          "People.Functions"
        ],
        "summary": "Invoke function GetFavoriteAirline",
        "operationId": "People.Person.GetFavoriteAirline",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airline"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()"
      ]
    },
    "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})": {
      "get": {
        "tags": [
          "People.Functions"
        ],
        "summary": "Invoke function GetFriendsTrips",
        "operationId": "People.Person.GetFriendsTrips",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "Usage: userName={userName}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Person",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})"
      ]
    },
    "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip": {
      "post": {
        "tags": [
          "People.Actions"
        ],
        "summary": "Invoke action GetPeersForTrip",
        "operationId": "People.Person.GetPeersForTrip",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "tripId": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Person",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip"
      ]
    },
    "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager": {
      "get": {
        "tags": [
          "Person.Manager"
        ],
        "summary": "Get the item of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person as Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result entities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()": {
      "get": {
        "tags": [
          "People.Functions"
        ],
        "summary": "Invoke function GetFavoriteAirline",
        "operationId": "People.Person.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.GetFavoriteAirline",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airline"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()"
      ]
    },
    "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})": {
      "get": {
        "tags": [
          "People.Functions"
        ],
        "summary": "Invoke function GetFriendsTrips",
        "operationId": "People.Person.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.GetFriendsTrips",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "Usage: userName={userName}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Manager",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})"
      ]
    },
    "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip": {
      "post": {
        "tags": [
          "People.Actions"
        ],
        "summary": "Invoke action GetPeersForTrip",
        "operationId": "People.Person.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.GetPeersForTrip",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "tripId": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Manager",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip"
      ]
    },
    "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Hire": {
      "post": {
        "tags": [
          "People.Actions"
        ],
        "summary": "Invoke action Hire",
        "description": "Hires someone for the company.",
        "operationId": "People.Person.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.Hire",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "hire": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      }
    },
    "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip": {
      "post": {
        "tags": [
          "People.Actions"
        ],
        "summary": "Invoke action ShareTrip",
        "description": "Details of the shared trip.",
        "operationId": "People.Person.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.ShareTrip",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "tripId": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip"
      ]
    },
    "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})": {
      "get": {
        "tags": [
          "People.Functions"
        ],
        "summary": "Invoke function UpdatePersonLastName",
        "operationId": "People.Person.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.UpdatePersonLastName",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "lastName",
            "in": "path",
            "description": "Usage: lastName={lastName}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "boolean",
                      "default": false
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})"
      ]
    },
    "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip": {
      "post": {
        "tags": [
          "People.Actions"
        ],
        "summary": "Invoke action ShareTrip",
        "description": "Details of the shared trip.",
        "operationId": "People.Person.ShareTrip",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "tripId": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip"
      ]
    },
    "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})": {
      "get": {
        "tags": [
          "People.Functions"
        ],
        "summary": "Invoke function UpdatePersonLastName",
        "operationId": "People.Person.UpdatePersonLastName",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "lastName",
            "in": "path",
            "description": "Usage: lastName={lastName}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "boolean",
                      "default": false
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})"
      ]
    },
    "/People/{UserName}/Trips": {
      "get": {
        "tags": [
          "People.Trip"
        ],
        "summary": "Get Trips from People",
        "description": "Collection of trips.",
        "operationId": "People.ListTrips",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "TripId",
                  "TripId desc",
                  "ShareId",
                  "ShareId desc",
                  "Name",
                  "Name desc",
                  "Budget",
                  "Budget desc",
                  "Description",
                  "Description desc",
                  "Tags",
                  "Tags desc",
                  "StartsAt",
                  "StartsAt desc",
                  "EndsAt",
                  "EndsAt desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "TripId",
                  "ShareId",
                  "Name",
                  "Budget",
                  "Description",
                  "Tags",
                  "StartsAt",
                  "EndsAt",
                  "PlanItems"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "PlanItems"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Trip",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "People.Trip"
        ],
        "summary": "Create new navigation property to Trips for People",
        "description": "Collection of trips.",
        "operationId": "People.CreateTrips",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/People/{UserName}/Trips/{TripId}": {
      "get": {
        "tags": [
          "People.Trip"
        ],
        "summary": "Get Trips from People",
        "description": "Collection of trips.",
        "operationId": "People.GetTrips",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "TripId",
            "in": "path",
            "description": "key: TripId of Trip",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "Trip"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "TripId",
                  "ShareId",
                  "Name",
                  "Budget",
                  "Description",
                  "Tags",
                  "StartsAt",
                  "EndsAt",
                  "PlanItems"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "PlanItems"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "People.Trip"
        ],
        "summary": "Update the navigation property Trips in People",
        "description": "Collection of trips.",
        "operationId": "People.UpdateTrips",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "TripId",
            "in": "path",
            "description": "key: TripId of Trip",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "Trip"
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "People.Trip"
        ],
        "summary": "Delete navigation property Trips for People",
        "description": "Collection of trips.",
        "operationId": "People.DeleteTrips",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "TripId",
            "in": "path",
            "description": "key: TripId of Trip",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "Trip"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/People/{UserName}/Trips/{TripId}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetInvolvedPeople()": {
      "get": {
        "tags": [
          "People.Functions"
        ],
        "summary": "Invoke function GetInvolvedPeople",
        "operationId": "People.Person.Trips.Trip.GetInvolvedPeople",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "TripId",
            "in": "path",
            "description": "key: TripId of Trip",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "Trip"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Trip",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      }
    },
    "/People/{UserName}/Trips/{TripId}/PlanItems": {
      "get": {
        "tags": [
          "People.Trips.PlanItem"
        ],
        "summary": "Get PlanItems from People",
        "operationId": "People.Trips.ListPlanItems",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "TripId",
            "in": "path",
            "description": "key: TripId of Trip",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "Trip"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "PlanItemId",
                  "PlanItemId desc",
                  "ConfirmationCode",
                  "ConfirmationCode desc",
                  "StartsAt",
                  "StartsAt desc",
                  "EndsAt",
                  "EndsAt desc",
                  "Duration",
                  "Duration desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "PlanItemId",
                  "ConfirmationCode",
                  "StartsAt",
                  "EndsAt",
                  "Duration"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of PlanItem",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.PlanItem"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/People/{UserName}/Trips/{TripId}/PlanItems/{PlanItemId}/$ref": {
      "delete": {
        "tags": [
          "People.Trips.PlanItem"
        ],
        "summary": "Delete ref of navigation property PlanItems for People",
        "operationId": "People.Trips.DeleteRefPlanItems",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "TripId",
            "in": "path",
            "description": "key: TripId of Trip",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "Trip"
          },
          {
            "name": "PlanItemId",
            "in": "path",
            "description": "key: PlanItemId of PlanItem",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "PlanItem"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "@id",
            "in": "query",
            "description": "Delete Uri",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/People/{UserName}/Trips/{TripId}/PlanItems/$count": {
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.PlanItems",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "TripId",
            "in": "path",
            "description": "key: TripId of Trip",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "Trip"
          }
        ],
        "responses": {
          "200": {
            "description": "The count of the resource",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ODataCountResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/People/{UserName}/Trips/{TripId}/PlanItems/$ref": {
      "get": {
        "tags": [
          "People.Trips.PlanItem"
        ],
        "summary": "Get ref of PlanItems from People",
        "operationId": "People.Trips.ListRefPlanItems",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "TripId",
            "in": "path",
            "description": "key: TripId of Trip",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "Trip"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "PlanItemId",
                  "PlanItemId desc",
                  "ConfirmationCode",
                  "ConfirmationCode desc",
                  "StartsAt",
                  "StartsAt desc",
                  "EndsAt",
                  "EndsAt desc",
                  "Duration",
                  "Duration desc"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property links",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of links of PlanItem",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "People.Trips.PlanItem"
        ],
        "summary": "Create new navigation property ref to PlanItems for People",
        "operationId": "People.Trips.CreateRefPlanItems",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          },
          {
            "name": "TripId",
            "in": "path",
            "description": "key: TripId of Trip",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            },
            "x-ms-docs-key-type": "Trip"
          }
        ],
        "requestBody": {
          "description": "New navigation property ref value",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created navigation property link.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/People/{UserName}/Trips/$count": {
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.Trips",
        "parameters": [
          {
            "name": "UserName",
            "in": "path",
            "description": "key: UserName of Person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-docs-key-type": "Person"
          }
        ],
        "responses": {
          "200": {
            "description": "The count of the resource",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ODataCountResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/People/$count": {
      "get": {
        "summary": "Get the number of the resource",
        "operationId": "Get.Count.People",
        "responses": {
          "200": {
            "description": "The count of the resource",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ODataCountResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee": {
      "get": {
        "tags": [
          "Person.Employee"
        ],
        "summary": "Get the item of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person as Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result entities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()": {
      "get": {
        "tags": [
          "People.Functions"
        ],
        "summary": "Invoke function GetFavoriteAirline",
        "operationId": "People.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.GetFavoriteAirline",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airline"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()"
      ]
    },
    "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})": {
      "get": {
        "tags": [
          "People.Functions"
        ],
        "summary": "Invoke function GetFriendsTrips",
        "operationId": "People.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.GetFriendsTrips",
        "parameters": [
          {
            "name": "userName",
            "in": "path",
            "description": "Usage: userName={userName}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Employee",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})"
      ]
    },
    "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip": {
      "post": {
        "tags": [
          "People.Actions"
        ],
        "summary": "Invoke action GetPeersForTrip",
        "operationId": "People.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.GetPeersForTrip",
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "tripId": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Employee",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip"
      ]
    },
    "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip": {
      "post": {
        "tags": [
          "People.Actions"
        ],
        "summary": "Invoke action ShareTrip",
        "description": "Details of the shared trip.",
        "operationId": "People.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.ShareTrip",
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "tripId": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip"
      ]
    },
    "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})": {
      "get": {
        "tags": [
          "People.Functions"
        ],
        "summary": "Invoke function UpdatePersonLastName",
        "operationId": "People.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee.UpdatePersonLastName",
        "parameters": [
          {
            "name": "lastName",
            "in": "path",
            "description": "Usage: lastName={lastName}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "boolean",
                      "default": false
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})"
      ]
    },
    "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager": {
      "get": {
        "tags": [
          "Person.Manager"
        ],
        "summary": "Get the item of type Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person as Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager",
        "operationId": "Get.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person.As.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "UserName",
                  "FirstName",
                  "LastName",
                  "MiddleName",
                  "Gender",
                  "Age",
                  "Emails",
                  "AddressInfo",
                  "HomeAddress",
                  "FavoriteFeature",
                  "Features",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Friends",
                  "BestFriend",
                  "Trips"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result entities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()": {
      "get": {
        "tags": [
          "People.Functions"
        ],
        "summary": "Invoke function GetFavoriteAirline",
        "operationId": "People.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.GetFavoriteAirline",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airline"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFavoriteAirline()"
      ]
    },
    "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})": {
      "get": {
        "tags": [
          "People.Functions"
        ],
        "summary": "Invoke function GetFriendsTrips",
        "operationId": "People.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.GetFriendsTrips",
        "parameters": [
          {
            "name": "userName",
            "in": "path",
            "description": "Usage: userName={userName}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Manager",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetFriendsTrips(userName={userName})"
      ]
    },
    "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip": {
      "post": {
        "tags": [
          "People.Actions"
        ],
        "summary": "Invoke action GetPeersForTrip",
        "operationId": "People.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.GetPeersForTrip",
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "tripId": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Manager",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.GetPeersForTrip"
      ]
    },
    "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip": {
      "post": {
        "tags": [
          "People.Actions"
        ],
        "summary": "Invoke action ShareTrip",
        "description": "Details of the shared trip.",
        "operationId": "People.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.ShareTrip",
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "tripId": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip"
      ]
    },
    "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})": {
      "get": {
        "tags": [
          "People.Functions"
        ],
        "summary": "Invoke function UpdatePersonLastName",
        "operationId": "People.Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager.UpdatePersonLastName",
        "parameters": [
          {
            "name": "lastName",
            "in": "path",
            "description": "Usage: lastName={lastName}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "boolean",
                      "default": false
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/BestFriend/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Friends/{UserName1}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Friends/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/{UserName}/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})",
        "/People/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee/Microsoft.OData.Service.Sample.TrippinInMemory.Models.UpdatePersonLastName(lastName={lastName})"
      ]
    },
    "/ResetDataSource": {
      "post": {
        "tags": [
          "ResetDataSource"
        ],
        "summary": "Invoke actionImport ResetDataSource",
        "description": "Resets the data source to default values.",
        "operationId": "ActionImport.ResetDataSource",
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "actionImport"
      }
    }
  },
  "components": {
    "schemas": {
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person": {
        "title": "Person",
        "type": "object",
        "properties": {
          "UserName": {
            "type": "string"
          },
          "FirstName": {
            "type": "string"
          },
          "LastName": {
            "type": "string",
            "nullable": true
          },
          "MiddleName": {
            "type": "string",
            "nullable": true
          },
          "Gender": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.PersonGender"
              }
            ]
          },
          "Age": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              }
            ],
            "format": "int64",
            "nullable": true
          },
          "Emails": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            }
          },
          "AddressInfo": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
                }
              ],
              "nullable": true
            }
          },
          "HomeAddress": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
              }
            ],
            "nullable": true
          },
          "FavoriteFeature": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Feature"
              }
            ]
          },
          "Features": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Feature"
                }
              ]
            }
          },
          "Friends": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
            }
          },
          "BestFriend": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
              }
            ],
            "description": "The best friend.",
            "nullable": true
          },
          "Trips": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
            },
            "description": "Collection of trips."
          }
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airline": {
        "title": "Airline",
        "type": "object",
        "properties": {
          "AirlineCode": {
            "type": "string"
          },
          "Name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airport": {
        "title": "Airport",
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "nullable": true
          },
          "IcaoCode": {
            "type": "string"
          },
          "IataCode": {
            "type": "string",
            "nullable": true
          },
          "Location": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.AirportLocation"
              }
            ],
            "nullable": true
          }
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location": {
        "title": "Location",
        "type": "object",
        "properties": {
          "Address": {
            "type": "string",
            "nullable": true
          },
          "City": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.City"
              }
            ],
            "nullable": true
          }
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.City": {
        "title": "City",
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "nullable": true
          },
          "CountryRegion": {
            "type": "string",
            "nullable": true
          },
          "Region": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.AirportLocation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
          },
          {
            "title": "AirportLocation",
            "type": "object",
            "properties": {
              "Loc": {
                "$ref": "#/components/schemas/Edm.GeographyPoint"
              }
            }
          }
        ]
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
          },
          {
            "title": "EventLocation",
            "type": "object",
            "properties": {
              "BuildingInfo": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip": {
        "title": "Trip",
        "type": "object",
        "properties": {
          "TripId": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "ShareId": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "format": "uuid"
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "Budget": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "format": "float"
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "Tags": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            }
          },
          "StartsAt": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time"
          },
          "EndsAt": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time"
          },
          "PlanItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.PlanItem"
            }
          }
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.PlanItem": {
        "title": "PlanItem",
        "type": "object",
        "properties": {
          "PlanItemId": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "ConfirmationCode": {
            "type": "string",
            "nullable": true
          },
          "StartsAt": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time"
          },
          "EndsAt": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time"
          },
          "Duration": {
            "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
            "type": "string",
            "format": "duration"
          }
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Event": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.PlanItem"
          },
          {
            "title": "Event",
            "type": "object",
            "properties": {
              "OccursAt": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation"
                  }
                ],
                "nullable": true
              },
              "Description": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.PublicTransportation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.PlanItem"
          },
          {
            "title": "PublicTransportation",
            "type": "object",
            "properties": {
              "SeatNumber": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Flight": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.PublicTransportation"
          },
          {
            "title": "Flight",
            "type": "object",
            "properties": {
              "FlightNumber": {
                "type": "string",
                "nullable": true
              },
              "Airline": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airline"
                  }
                ],
                "nullable": true
              },
              "From": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airport"
                  }
                ],
                "nullable": true
              },
              "To": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airport"
                  }
                ],
                "nullable": true
              }
            }
          }
        ]
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
          },
          {
            "title": "Employee",
            "type": "object",
            "properties": {
              "Cost": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ],
                "format": "int64"
              },
              "Peers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                }
              }
            }
          }
        ]
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
          },
          {
            "title": "Manager",
            "type": "object",
            "properties": {
              "Budget": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ],
                "format": "int64"
              },
              "BossOffice": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
                  }
                ],
                "nullable": true
              },
              "DirectReports": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
                }
              }
            }
          }
        ]
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.PersonGender": {
        "title": "PersonGender",
        "enum": [
          "Male",
          "Female",
          "Unknow"
        ],
        "type": "string"
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Feature": {
        "title": "Feature",
        "enum": [
          "Feature1",
          "Feature2",
          "Feature3",
          "Feature4"
        ],
        "type": "string"
      },
      "Edm.Geography": {
        "$ref": "#/components/schemas/Edm.Geometry"
      },
      "Edm.GeographyPoint": {
        "$ref": "#/components/schemas/Edm.GeometryPoint"
      },
      "Edm.GeographyLineString": {
        "$ref": "#/components/schemas/Edm.GeometryLineString"
      },
      "Edm.GeographyPolygon": {
        "$ref": "#/components/schemas/Edm.GeometryPolygon"
      },
      "Edm.GeographyMultiPoint": {
        "$ref": "#/components/schemas/Edm.GeometryMultiPoint"
      },
      "Edm.GeographyMultiLineString": {
        "$ref": "#/components/schemas/Edm.GeometryMultiLineString"
      },
      "Edm.GeographyMultiPolygon": {
        "$ref": "#/components/schemas/Edm.GeometryMultiPolygon"
      },
      "Edm.GeographyCollection": {
        "$ref": "#/components/schemas/Edm.GeometryCollection"
      },
      "Edm.Geometry": {
        "type": "object",
        "anyOf": [
          {
            "$ref": "#/components/schemas/Edm.GeometryPoint"
          },
          {
            "$ref": "#/components/schemas/Edm.GeometryLineString"
          },
          {
            "$ref": "#/components/schemas/Edm.GeometryPolygon"
          },
          {
            "$ref": "#/components/schemas/Edm.GeometryMultiPoint"
          },
          {
            "$ref": "#/components/schemas/Edm.GeometryMultiLineString"
          },
          {
            "$ref": "#/components/schemas/Edm.GeometryMultiPolygon"
          },
          {
            "$ref": "#/components/schemas/Edm.GeometryCollection"
          }
        ]
      },
      "Edm.GeometryPoint": {
        "required": [
          "type",
          "coordinates"
        ],
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "Point"
            ],
            "type": "string",
            "default": "Point"
          },
          "coordinates": {
            "$ref": "#/components/schemas/GeoJSON.position"
          }
        }
      },
      "Edm.GeometryLineString": {
        "required": [
          "type",
          "coordinates"
        ],
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "LineString"
            ]
          },
          "coordinates": {
            "minItems": 2,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GeoJSON.position"
            }
          }
        }
      },
      "Edm.GeometryPolygon": {
        "required": [
          "type",
          "coordinates"
        ],
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "Polygon"
            ]
          },
          "coordinates": {
            "minItems": 4,
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GeoJSON.position"
              }
            }
          }
        }
      },
      "Edm.GeometryMultiPoint": {
        "required": [
          "type",
          "coordinates"
        ],
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "MultiPoint"
            ]
          },
          "coordinates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GeoJSON.position"
            }
          }
        }
      },
      "Edm.GeometryMultiLineString": {
        "required": [
          "type",
          "coordinates"
        ],
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "MultiLineString"
            ]
          },
          "coordinates": {
            "minItems": 2,
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GeoJSON.position"
              }
            }
          }
        }
      },
      "Edm.GeometryMultiPolygon": {
        "required": [
          "type",
          "coordinates"
        ],
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "MultiPolygon"
            ]
          },
          "coordinates": {
            "minItems": 4,
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GeoJSON.position"
                }
              }
            }
          }
        }
      },
      "Edm.GeometryCollection": {
        "required": [
          "type",
          "coordinates"
        ],
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "GeometryCollection"
            ]
          },
          "coordinates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Edm.Geometry"
            }
          }
        }
      },
      "GeoJSON.position": {
        "minItems": 2,
        "type": "array",
        "items": {
          "type": "number"
        }
      },
      "odata.error": {
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/odata.error.main"
          }
        }
      },
      "odata.error.main": {
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "target": {
            "type": "string"
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/odata.error.detail"
            }
          },
          "innererror": {
            "type": "object",
            "description": "The structure of this object is service-specific"
          }
        }
      },
      "odata.error.detail": {
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "target": {
            "type": "string"
          }
        }
      },
      "ODataCountResponse": {
        "type": "integer",
        "format": "int32"
      }
    },
    "responses": {
      "error": {
        "description": "error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/odata.error"
            }
          }
        }
      }
    },
    "parameters": {
      "top": {
        "name": "$top",
        "in": "query",
        "description": "Show only the first n items",
        "schema": {
          "minimum": 0,
          "type": "integer"
        },
        "example": 50
      },
      "skip": {
        "name": "$skip",
        "in": "query",
        "description": "Skip the first n items",
        "schema": {
          "minimum": 0,
          "type": "integer"
        }
      },
      "count": {
        "name": "$count",
        "in": "query",
        "description": "Include count of items",
        "schema": {
          "type": "boolean"
        }
      },
      "filter": {
        "name": "$filter",
        "in": "query",
        "description": "Filter items by property values",
        "schema": {
          "type": "string"
        }
      },
      "search": {
        "name": "$search",
        "in": "query",
        "description": "Search items by search phrases",
        "schema": {
          "type": "string"
        }
      }
    },
    "examples": {
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person": {
        "value": {
          "AddressInfo": [
            {
              "@odata.type": "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
            }
          ],
          "Age": 0,
          "BestFriend": {
            "@odata.type": "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
          },
          "Emails": [
            "String"
          ],
          "FavoriteFeature": {
            "@odata.type": "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Feature"
          },
          "Features": [
            {
              "@odata.type": "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Feature"
            }
          ],
          "FirstName": "String",
          "Friends": [
            {
              "@odata.type": "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
            }
          ],
          "Gender": {
            "@odata.type": "Microsoft.OData.Service.Sample.TrippinInMemory.Models.PersonGender"
          },
          "HomeAddress": {
            "@odata.type": "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
          },
          "LastName": "String",
          "MiddleName": "String",
          "Trips": [
            {
              "@odata.type": "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
            }
          ],
          "UserName": "String (identifier)"
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airline": {
        "value": {
          "AirlineCode": "String (identifier)",
          "Name": "String"
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airport": {
        "value": {
          "IataCode": "String",
          "IcaoCode": "String (identifier)",
          "Location": {
            "@odata.type": "Microsoft.OData.Service.Sample.TrippinInMemory.Models.AirportLocation"
          },
          "Name": "String"
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location": {
        "value": {
          "Address": "String",
          "City": {
            "@odata.type": "Microsoft.OData.Service.Sample.TrippinInMemory.Models.City"
          }
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.City": {
        "value": {
          "CountryRegion": "String",
          "Name": "String",
          "Region": "String"
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.AirportLocation": {
        "value": {
          "Loc": "GeographyPoint"
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation": {
        "value": {
          "BuildingInfo": "String"
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip": {
        "value": {
          "Budget": 0,
          "Description": "String",
          "EndsAt": "0001-01-01T00:00:00.0000000+00:00",
          "Name": "String",
          "PlanItems": [
            {
              "@odata.type": "Microsoft.OData.Service.Sample.TrippinInMemory.Models.PlanItem"
            }
          ],
          "ShareId": "00000000-0000-0000-0000-000000000000",
          "StartsAt": "0001-01-01T00:00:00.0000000+00:00",
          "Tags": [
            "String"
          ],
          "TripId": 0
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.PlanItem": {
        "value": {
          "ConfirmationCode": "String",
          "Duration": "Duration",
          "EndsAt": "0001-01-01T00:00:00.0000000+00:00",
          "PlanItemId": 0,
          "StartsAt": "0001-01-01T00:00:00.0000000+00:00"
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Event": {
        "value": {
          "Description": "String",
          "OccursAt": {
            "@odata.type": "Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation"
          }
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.PublicTransportation": {
        "value": {
          "SeatNumber": "String"
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Flight": {
        "value": {
          "Airline": {
            "@odata.type": "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airline"
          },
          "FlightNumber": "String",
          "From": {
            "@odata.type": "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airport"
          },
          "To": {
            "@odata.type": "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airport"
          }
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee": {
        "value": {
          "Cost": 0,
          "Peers": [
            {
              "@odata.type": "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
            }
          ]
        }
      },
      "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager": {
        "value": {
          "BossOffice": {
            "@odata.type": "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
          },
          "Budget": 0,
          "DirectReports": [
            {
              "@odata.type": "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
            }
          ]
        }
      }
    }
  },
  "tags": [
    {
      "name": "Airlines.Airline",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "Airports.Airport",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "Airports",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "People",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "Me.Person",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "Person.Employee"
    },
    {
      "name": "Me.Functions",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "Me.Actions",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "Person.Manager"
    },
    {
      "name": "Me.Trip",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "Me.Trips.PlanItem",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "NewComePeople.Person",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "NewComePeople.Functions",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "NewComePeople.Actions",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "NewComePeople.Trip",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "NewComePeople.Trips.PlanItem",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "People.Person",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "People.Functions",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "People.Actions",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "People.Trip",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "People.Trips.PlanItem",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "ResetDataSource",
      "x-ms-docs-toc-type": "container"
    }
  ]
}